plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'com'
version = '4.6.51'

repositories {
    mavenCentral()
    maven {
        name = "papermc"
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = "spigotmc"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
    maven {
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'MorePaperLib'
        url = 'https://mvn-repo.arim.space/lesser-gpl3/'
    }
    maven {
        url = "https://repo.jeff-media.com/public/"
    }
    maven {
        url = "https://repo.codemc.org/repository/maven-public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT"
    compileOnly "org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'me.clip:placeholderapi:2.11.5'
    implementation 'space.arim.morepaperlib:morepaperlib:0.4.4'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.1'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'io.github.bananapuncher714:nbteditor:7.19.7'
    implementation 'com.zaxxer:HikariCP:4.0.3'
    compileOnly 'com.mojang:authlib:1.5.25'
}

shadowJar {
    destinationDirectory = file('OutPut')
    archiveClassifier.set('')
    dependencies {
        include(dependency('space.arim.morepaperlib:morepaperlib'))
        include(dependency('com.zaxxer:HikariCP'))
        include(dependency('org.slf4j:slf4j-api'))
        include(dependency('io.github.bananapuncher714:nbteditor'))
    }
}


//def targetJavaVersion = 1.8
//java {
//    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
//    sourceCompatibility = javaVersion
//    targetCompatibility = javaVersion
//    if (JavaVersion.current() < javaVersion) {
//        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
//    }
//}
//
//tasks.withType(JavaCompile).configureEach {
//    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
//        options.release.set(targetJavaVersion)
//    }
//}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

